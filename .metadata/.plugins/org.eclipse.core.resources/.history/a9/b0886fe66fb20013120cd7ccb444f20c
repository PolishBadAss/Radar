package com.example.videoMake;

import static com.googlecode.javacv.cpp.opencv_highgui.cvSaveImage;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

import com.example.aplikacja_testowa1.CameraActivity;
import com.example.cameraUse.FastBurst;
import com.googlecode.javacv.FFmpegFrameGrabber;
import com.googlecode.javacv.FrameGrabber;
import com.googlecode.javacv.FrameGrabber.Exception;
import com.googlecode.javacv.cpp.opencv_core.IplImage;

import android.graphics.Bitmap;
import android.hardware.Camera;
import android.media.MediaMetadataRetriever;
import android.media.MediaPlayer;
import android.media.MediaRecorder;
import android.net.Uri;
import android.os.Environment;
import android.util.Log;
import android.widget.Toast;


public class RapeFrames {

	@SuppressWarnings("unused")
	private static final int OPTION_CLOSEST_SYNC = 2;
	private static final int MEDIA_TYPE_IMAGE = 1;
	public static double videoDuration;
	public static int numberOfPicturesTaken;
	public static boolean fnTaken=false;
	public static ByteArrayOutputStream bytes = new ByteArrayOutputStream();
	public static File f; 
	public static Bitmap bitmap;
	public static ArrayList<IplImage> colorFrames=new ArrayList<IplImage>();

	// Not used
	public static ArrayList<Bitmap> getThem()
	{
		String src=Environment.getExternalStorageDirectory().getAbsolutePath()+"/Pictures/iRost/measure.mp4";
		File videoFile=new File(src);
		//=========
		FrameGrabber videoGrabber = new FFmpegFrameGrabber(src);
		Log.d("CeVau","Grabber ="+videoGrabber);
		try {
			madaFNGrab(videoGrabber);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		//=========
		Uri videoFileUri=Uri.parse(videoFile.toString());

		MediaMetadataRetriever retriever = new MediaMetadataRetriever();
		retriever.setDataSource(videoFile.getAbsolutePath());
		ArrayList<Bitmap> rev=new ArrayList<Bitmap>();

		//Create a new Media Player
		MediaPlayer mp = MediaPlayer.create(CameraActivity.cntx,videoFileUri);

		int millis = mp.getDuration();
		for(int i=0;i<millis;i+=100)
		{
		   //bitmap=retriever.getFrameAtTime(i*1000, MediaMetadataRetriever.OPTION_CLOSEST);
           Log.d("CeVau","Retriever one inter at i = "+i+" / "+millis);
           
		   //rev.add(bitmap);
		}
		Log.d("CeVau","Retriever END ");
		videoDuration=millis;
		return rev;
	}
	
	public static void getThemV2()
	{
		// Video PATH!!
		String src=Environment.getExternalStorageDirectory().getAbsolutePath()+"/Pictures/measure.mp4";
		//=========
		FrameGrabber videoGrabber = new FFmpegFrameGrabber(src);
		Log.d("CeVau","Grabber captured video as = "+videoGrabber);
		try 
		{
			madaFNGrab(videoGrabber);
		}
		catch (Exception e) 
		{
			e.printStackTrace();
		}
		//=========
		
	}
	// not used
	public static void saveFrames(ArrayList<Bitmap> saveBitmapList) throws IOException
	{
	   
		Random r = new Random();
	    int folder_id = r.nextInt(1000) + 1;

	    String folder = Environment.getExternalStorageDirectory().getAbsolutePath()+"Pictures/iRost/";
	    File saveFolder=new File(folder);
	    if(!saveFolder.exists()){
	       saveFolder.mkdirs();
	    }
	    final int x=saveBitmapList.size()+2;
	    numberOfPicturesTaken=x;
	    int i=1;
	    for (Bitmap b : saveBitmapList)
	    {
	        b.compress(Bitmap.CompressFormat.JPEG, 70, bytes);
	        f = FastBurst.getOutputMediaFile(MEDIA_TYPE_IMAGE, i);
	        FileOutputStream fo = new FileOutputStream(f);
	        fo.write(bytes.toByteArray());
	        Log.d("CeVau","Frame SAVED = "+i);
	           fo.flush();
	           fo.close();
	        i++;
	        //Toast.makeText(CameraActivity.cntx,"Frame: "+i+"/"+x, Toast.LENGTH_SHORT).show();
	        
	    }
	    
	    Toast.makeText(CameraActivity.cntx,"Folder id : "+folder_id, Toast.LENGTH_SHORT).show();
	    if((x-i)<=3)
	    {
	    	fnTaken=true;
	    }
	}
	
	public static void stopRecording(MediaRecorder recorder,Camera camera) {
	    try{
	        recorder.stop();
	    }catch(RuntimeException stopException){
	        stopException.printStackTrace();
	    }
	    camera.lock();
	}
	
	public static void madaFNGrab(FrameGrabber grabber) throws Exception
	{
			grabber.start();
	        IplImage frame = null;  

	        int frame_counter = 1;
	        while (true)
	        {
	            frame = grabber.grab();               
	            if (frame == null)
	            {
	            	Log.d("CeVau","Grabber frame = null");
	                break;
	            }
	            else
	            {
	            	Log.d("CeVau","Grabber applies frame = "+frame);
	            	colorFrames.add(frame);
	            	cvSaveImage(Environment.getExternalStorageDirectory().getAbsolutePath()+"/Pictures/iRost/"+frame_counter+".jpg", frame);
	            }
	            frame_counter++;
	        }
	        numberOfPicturesTaken=frame_counter-1;
	        fnTaken=true;
	}
	
	public static void setDurationOfVideo(String src)
	{
		//String src=Environment.getExternalStorageDirectory().getAbsolutePath()+"/Pictures/measure.mp4";
		File videoFile=new File(src);
		Uri videoFileUri=Uri.parse(videoFile.toString());
		MediaPlayer mp = MediaPlayer.create(CameraActivity.cntx,videoFileUri);

		int millis = mp.getDuration();
		videoDuration=millis;
	}
}
